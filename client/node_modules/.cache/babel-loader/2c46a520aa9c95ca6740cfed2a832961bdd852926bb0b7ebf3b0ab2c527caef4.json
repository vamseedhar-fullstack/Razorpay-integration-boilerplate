{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vamseedhar Reddy\\\\Downloads\\\\razorpay\\\\razorpay_reactjs_nodejs\\\\client\\\\src\\\\Product.js\";\nimport TshirtImg from \"./tshirt.svg\";\nimport logo from './1639571094387.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Product() {\n  const amount = 500;\n  const currency = \"INR\";\n  const receiptId = \"qwsaq1\";\n  const paymentHandler = async e => {\n    const response = await fetch(\"http://localhost:3001/order\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        amount,\n        currency,\n        receipt: receiptId\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const order = await response.json();\n    console.log(order);\n    var options = {\n      key: \"rzp_live_2EWSvUx7aMmKbv\",\n      // Enter the Key ID generated from the Dashboard\n      amount,\n      // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise\n      currency,\n      name: \"Yatayati\",\n      //your business name\n      description: \"Test Transaction\",\n      image: logo,\n      order_id: order.id,\n      //This is a sample Order ID. Pass the `id` obtained in the response of Step 1\n      handler: async function (response) {\n        const body = {\n          ...response\n        };\n        const validateRes = await fetch(\"http://localhost:3001/order/validate\", {\n          method: \"POST\",\n          body: JSON.stringify(body),\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        const jsonRes = await validateRes.json();\n        console.log(jsonRes);\n      },\n      prefill: {\n        //We recommend using the prefill parameter to auto-fill customer's contact information, especially their phone number\n        name: \"Web Dev Matrix\",\n        //your customer's name\n        email: \"webdevmatrix@example.com\",\n        contact: \"9000000000\" //Provide the customer's phone number for better conversion rates\n      },\n\n      notes: {\n        address: \"Razorpay Corporate Office\"\n      },\n      theme: {\n        color: \"rgb(255,197,6)\"\n      }\n    };\n    var rzp1 = new window.Razorpay(options);\n    rzp1.on(\"payment.failed\", function (response) {\n      alert(response.error.code);\n      alert(response.error.description);\n      alert(response.error.source);\n      alert(response.error.step);\n      alert(response.error.reason);\n      alert(response.error.metadata.order_id);\n      alert(response.error.metadata.payment_id);\n    });\n    rzp1.open();\n    e.preventDefault();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tshirt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Solid blue cotton Tshirt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: TshirtImg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: paymentHandler,\n      children: \"Pay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_c = Product;\nexport default Product;\nvar _c;\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"names":["TshirtImg","logo","jsxDEV","_jsxDEV","Product","amount","currency","receiptId","paymentHandler","e","response","fetch","method","body","JSON","stringify","receipt","headers","order","json","console","log","options","key","name","description","image","order_id","id","handler","validateRes","jsonRes","prefill","email","contact","notes","address","theme","color","rzp1","window","Razorpay","on","alert","error","code","source","step","reason","metadata","payment_id","open","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Vamseedhar Reddy/Downloads/razorpay/razorpay_reactjs_nodejs/client/src/Product.js"],"sourcesContent":["import TshirtImg from \"./tshirt.svg\";\r\nimport logo from './1639571094387.jpg';\r\n\r\nfunction Product() {\r\n  const amount = 500;\r\n  const currency = \"INR\";\r\n  const receiptId = \"qwsaq1\";\r\n\r\n  const paymentHandler = async (e) => {\r\n    const response = await fetch(\"http://localhost:3001/order\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        amount,\r\n        currency,\r\n        receipt: receiptId,\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    const order = await response.json();\r\n    console.log(order);\r\n\r\n    var options = {\r\n      key: \"rzp_live_2EWSvUx7aMmKbv\", // Enter the Key ID generated from the Dashboard\r\n      amount, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise\r\n      currency,\r\n      name: \"Yatayati\", //your business name\r\n      description: \"Test Transaction\",\r\n      image: logo,\r\n      order_id: order.id, //This is a sample Order ID. Pass the `id` obtained in the response of Step 1\r\n      handler: async function (response) {\r\n        const body = {\r\n          ...response,\r\n        };\r\n\r\n        const validateRes = await fetch(\r\n          \"http://localhost:3001/order/validate\",\r\n          {\r\n            method: \"POST\",\r\n            body: JSON.stringify(body),\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n        const jsonRes = await validateRes.json();\r\n        console.log(jsonRes);\r\n      },\r\n      prefill: {\r\n        //We recommend using the prefill parameter to auto-fill customer's contact information, especially their phone number\r\n        name: \"Web Dev Matrix\", //your customer's name\r\n        email: \"webdevmatrix@example.com\",\r\n        contact: \"9000000000\", //Provide the customer's phone number for better conversion rates\r\n      },\r\n      notes: {\r\n        address: \"Razorpay Corporate Office\",\r\n      },\r\n      theme: {\r\n        color: \"rgb(255,197,6)\",\r\n      },\r\n    };\r\n    var rzp1 = new window.Razorpay(options);\r\n    rzp1.on(\"payment.failed\", function (response) {\r\n      alert(response.error.code);\r\n      alert(response.error.description);\r\n      alert(response.error.source);\r\n      alert(response.error.step);\r\n      alert(response.error.reason);\r\n      alert(response.error.metadata.order_id);\r\n      alert(response.error.metadata.payment_id);\r\n    });\r\n    rzp1.open();\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div className=\"product\">\r\n      <h2>Tshirt</h2>\r\n      <p>Solid blue cotton Tshirt</p>\r\n      <img src={TshirtImg} />\r\n      <br />\r\n      <button onClick={paymentHandler}>Pay</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Product;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}